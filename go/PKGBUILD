
pkgname=go
pkgver=1.22.1
pkgrel=1
pkgdesc='Google Go compiler and tools (release version)'
arch=('x86_64')
url='https://go.dev/'
license=('BSD')
depends=('perl' 'gawk')
makedepends=('inetutils' 'go')
options=('!strip' 'staticlibs')
install="${pkgname}.install"
source=("https://storage.googleapis.com/golang/${pkgname}${pkgver}.linux-amd64.tar.gz")
sha256sums=('aab8e15785c997ae20f9c88422ee35d962c4562212bb0f879d052a35c8307c7f')

build() {
  cd go/src
  # run prior to building:
  export LC_ALL="en_US.UTF-8"

  export GOROOT_FINAL=/usr/lib/go
  export GOROOT_BOOTSTRAP="$GOROOT_FINAL"
  export GOOS=linux
  export GOARCH=amd64

  ./make.bash -v

  GOOS=linux
}

check() {
  cd go

  export GOOS=linux
  export GOARCH=amd64
  export PATH="${srcdir}/${pkgname}-$pkgver/bin:$PATH"

  cd src && bash run.bash --no-rebuild || true
}

package() {
  cd go

  install -Dm644 LICENSE ${pkgdir}/usr/share/licenses/go/LICENSE

  install -d ${pkgdir}/usr/bin ${pkgdir}/usr/lib/go ${pkgdir}/usr/share/doc/go


  cp -r doc -t "${pkgdir}/usr/share/doc/go"
  ln -s /usr/share/go/doc "${pkgdir}/usr/lib/go/doc"
  cp -a bin "${pkgdir}/usr/lib/go"
  cp -a pkg "${pkgdir}/usr/lib/go"
  cp -a src "${pkgdir}/usr/lib/go/"
  cp -a lib "${pkgdir}/usr/lib/go/"
  cp -a misc "${pkgdir}/usr/lib/go/"

  install -Dm644 src/Make.* "${pkgdir}/usr/lib/go/src"

  ln -sf /usr/lib/go/bin/go "${pkgdir}/usr/bin/go"
  ln -sf /usr/lib/go/bin/gofmt "${pkgdir}/usr/bin/gofmt"

  install -Dm755 src/make.bash "${pkgdir}/usr/lib/go/src/make.bash"
  install -Dm755 src/run.bash "${pkgdir}/usr/lib/go/src/run.bash"
  cp -r misc/ "${pkgdir}/usr/lib/go/"

  rm -f "${pkgdir}/usr/share/go/doc/articles/wiki/get.bin"
  rm -rf "${pkgdir}"/usr/lib/go/pkg/obj/go-build/*

  install -Dm644 VERSION "${pkgdir}/usr/lib/go/VERSION"
  install -Dm644 go.env "$pkgdir/usr/lib/go/go.env"
}
